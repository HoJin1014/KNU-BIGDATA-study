str(df)
df$Deep.Learning
colnames(df) <- c('no',
'name',
'python',
'r',
'ml',
'dl',
'cloud')
colnames(df)[6] <- '딥러닝'
cbind(df.1, df.2)
merge(df.1, df.2)
merge(df.1, df.2, all = T)
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름')
by.y = c('No', 'Name'))
str(df)
str(df)
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름')
by.y = c('No', 'Name'))
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름'),
by.y = c('No', 'Name'))
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름'),
by.y = c('No', 'Name'))
cbind(df.1, df.2)
merge(df.1, df.2)
merge(df.1, df.2, all = T)
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름'),
by.y = c('No', 'Name'))
cbind(df.1, df.2)
merge(df.1, df.2)
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름'),
by.y = c('No', 'Name'))
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름'),
by.y = c('No', 'Name'))
str(df)
merge(df.1, df.2, all = T)
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름'),
by.y = c('No', 'Name'))
library(readxl)
df.1 <- read_excel("성적표.xlsx", sheet = 1)
df.2 <- read_excel("성적표.xlsx", sheet = 2)
df.1
df.2
cbind(df.1, df.2)
merge(df.1, df.2)
merge(df.1, df.2, all = T)
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름'),
by.y = c('No', 'Name'))
colnames(df) <- c('no',
'name',
'python',
'r',
'ml',
'dl',
'cloud')
library(readxl)
df.1 <- read_excel("성적표.xlsx", sheet = 1)
df.2 <- read_excel("성적표.xlsx", sheet = 2)
df.1
df.2
cbind(df.1, df.2)
merge(df.1, df.2)
merge(df.1, df.2, all = T)
df <- merge(df.1, df.2, all = T,
by.x = c('번호', '이름'),
by.y = c('No', 'Name'))
str(df)
colnames(df) <- c('no',
'name',
'python',
'r',
'ml',
'dl',
'cloud')
colnames(df)[6] <- '딥러닝'
colnames(df)
df$Deep.Learning
aggregate(df,
by = list(df$Species),
FUN = mean)
df <- iris
aggregate(df,
by = list(df$Species),
FUN = mean)
aggregate(df[, -5],
by = list(df$Species),
FUN = mean)
aggregate(df[, -5],
by = list(품종=df$Species),
FUN = mean)
aggregate(df[, -5],
by = list(품종=df$Species),
FUN = sd)
library(MASS)
data("survey")
df <- survey
str(df)
df <- na.omit(df)
df <- df[complete.cases(df), ]
dim(df)
hist(df$Height)
hist(df$Height, breaks = 20)
hist(df[df$Sex == 'Male', ]$Height, breaks = 20)
hist(df[df$Sex == 'Female', ]$Height, breaks = 20)
hist(df[df$Sex == 'Male', ]$Height, breaks = 20)
mean(df[df$Sex == 'Male', ]$Height)
mean(df[df$Sex == 'Female', ]$Height)
aggregate(df,
by = list(df$Sex),
FUN = mean)
aggregate(df[, c(10, 12)],
by = list(df$Sex),
FUN = mean)
aggregate(df[, c(10, 12)],
by = list(Gender = df$Sex),
FUN = mean)
t.test(Height ~ Sex, data = df)
table(df$Sex)
boxplot(Height ~ Sex, data = df,
col = c("orange", "tomato"))
#####---------------------
s <- 0
}
#####---------------------
s <- 0
}
for (i in 1:1000000) {
x <- sample(1:10, size = 5)
s <- s + sum(x == 7)
}
s
#####---------------------
s <- 0
for (i in 1:1000000) {
x <- sample(1:10, size = 5)
s <- s + sum(x == 7)
}
s
#####---------------------
s <- 0
for (i in 1:1000000) {
x <- sample(1:10, size = 5)
s <- s + sum(x == 7)
}
s
sample(1:10, size=5, replace = T)
#####---------------------
s <- 0
for (i in 1:1000000) {
x <- sample(1:10, size = 5)
s <- s + sum(x == 7)
}
s
sample(1:10, size=5, replace = T)
#####---------------------
s <- 0
for (i in 1:1000000) {
x <- sample(1:10, size = 5)
s <- s + sum(x == 7)
}
s
sample(1:10, size=5, replace = T)
idx <- sample(1:nrow(iris), size = 50)
iris[idx, ]
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
set.seed(2022)
sample(1:10, size=5, replace = T)
idx <- sample(1:nrow(iris), size = 50)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
set.seed(2022)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
sample(1:10, size=5, replace = T)
data()
data(package = "palmerpenguins")
##### 9장 #####
library(palmerpenguins)
data("penguins")
pg <- penguins
str(pg)
pg <- data.frame(penguins)
str(pg)
library(VIM)
aggr(pg)
aggr(pg, numbers = T)
library(VIM)
aggr(pg, numbers = T)
aggr(pg, numbers = T, prop = F)
pg <- na.omit(pg)
dim(pg)
aggr(pg, numbers = T, prop = F)
pg <- na.omit(pg)
dim(pg)
str(pg)
table(pg$species)
barplot(table(pg$species))
table(pg$island)
barplot(table(pg$species))
barplot(table(pg$island))
table(pg$sex)
barplot(table(pg$sex))
str(pg)
str(pg[, 3:6])
summary(pg[, 3:6])
hist(pg$bill_length_mm)
par(mfrow = c(2, 2))
hist(pg$bill_length_mm)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1, 1))
par(mfrow = c(1, 4)) # 2, 2
hist(pg$bill_length_mm)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1, 1))
par(mfrow = c(1, 4)) # 2, 2
hist(pg$bill_length_mm, col = 1:3)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1, 1))
par(mfrow = c(1, 4)) # 2, 2
hist(pg$bill_length_mm, col = 1:5)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1, 1))
par(mfrow = c(1, 4)) # 2, 2
hist(pg$bill_length_mm, col = 1:5)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1, 1))
par(mfrow = c(2, 2)) # 2, 2 # 1, 4
hist(pg$bill_length_mm, col = 1:5)
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1, 1))
par(mfrow = c(2, 2)) # 2, 2 # 1, 4
hist(pg$bill_length_mm, col = 2:5) # 1:5
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1, 1))
par(mfrow = c(2, 2)) # 2, 2 # 1, 4
hist(pg$bill_length_mm, col = c("orange", "violet", "pink") # 1:5
hist(pg$bill_depth_mm)
par(mfrow = c(2, 2)) # 2, 2 # 1, 4
hist(pg$bill_length_mm, col = c("orange", "violet", "pink")) # 1:5
hist(pg$bill_depth_mm)
hist(pg$flipper_length_mm)
hist(pg$body_mass_g)
par(mfrow = c(1, 1))
plot(pg$bill_length_mm, pg$bill_depth_mm)
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = "tomato")
cor(pg$bill_length_mm, pg$bill_depth_mm)
my.color <- ifelse(pg$species == "Gentoo", "tomato"
ifelse(pg$species == "Adelie", "steelblue", "orange"))
my.color <- ifelse(pg$species == "Gentoo", "tomato",
ifelse(pg$species == "Adelie", "steelblue", "orange"))
plot(pg$bill_length_mm, pg$bill_depth_mm,
pch = 19, col = my.color) # "tomato"
cor(pg$bill_length_mm, pg$bill_depth_mm)
cor(pg[pg$species == "Adelie", ]bill_length_mm,
cor(pg[pg$species == "Adelie", ]bill_length_mm,
cor(pg[pg$species == "Adelie", ]$bill_length_mm,
pg[pg$species == "Adelie", ]$bill_depth_mm)
### 5장 함수의 이해
# 사용자 정의 함수: user-defined functions
function.name <- function (parameters) {
function.bodies
return (returnValue)
}
add <- function (x, y) {
z <- x + y
return (z)
}
add
add(3, 4)
func1 <- function(x, y, z) {
return (x+2 * y+3 * z)
}
func1(1, 2, 3)
func1(x  = 1, y = 2, z = 3)
func1(3, 2, 1)
func2 <- function (x, y = 1, z = 0) {
return (x + 2 * y + 3 * z)
}
func2(1, 2, 3)
round(x = pi, digits = 4)
getwd()
tapply()
tapply(df$species,
INDEX = list(df$species),
FUN = length)
# 집단별로 비율 확인
library(palmerpenguins)
df <- na.omit(penguins)
tapply(df$species,
INDEX = list(df$species),
FUN = length)
table(df$species)
tapply(df$species,
INDEX = list(df$species),
FUN = length)
prop.table(table(df$species))
prop.table(table(df$sex))
table(df$island, df$species)
library(gmodels)
library(gmodels)
library(gmodels)
CrossTable()
library(gmodels)
CrossTable()
CrossTable(df$islandm df$species)
library(gmodels)
install.packages(gmodles)
CrossTable(df$islandm df$species,
library(gmodels)
CrossTable(df$islandm df$species,
CrossTable(df$island df$species,
C
library(gmodels)
CrossTable(df$island df$species,
library(psych)
library(psych)
install.packages(psych)
describe(df)[, c(1:3, 8:9)]
install.packages(psych)
?ggplot
?/ggplot
??ggplot
library(ggplot2)
??ggplot2
library(gmodels)
CrossTable(df$island df$species,
CrossTable(df$island, df$species,
prop.t = F, prop.chisq = F)
?CrossTable
install.packages(psych)
library(psych)
# aggregate() 함수를 이용하여 범주별
# 기술 통계랑 산출.
aggregate(df[, 3:6],
by = list(sepcies = df$species),
FUN = mean)
tapply(df$bill_length_mm,
INDEX = list(species = df$species),
FUN = mean)
tapply(df$bill_depth_mm,
INDEX = list(species = df$species),
FUN = mean)
boxplot(flipper_length mm ~ species,
boxplot(flipper_length mm ~ species,
tapply(flipper_length)
library(gmodels)
CrossTable(df$island, df$species,
prop.t = F, prop.chisq = F)
?CrossTable
install.packages(psych)
library(psych)
describe(df)[, c(2:4, 8:9)]
boxplot(flipper_length mm ~ species,
boxplot(flipper_length_mm ~ species,
data = df, col = 2:4)
boxplot.stats($stats)
boxplot.stats(Adelie$stats)
boxplot.stats(df$stats)
library(Adeliepenguins)
outlier <- boxplot.stats(df$flipper_length_mm[df$species == 'Adele'])$out
df[df$flipper_length_mm % outlier]
df[df$flipper_length_mm %in% outlier]
outlier <- boxplot.stats(df$flipper_length_mm[df$species == 'Adele'])$out
df[df$flipper_length_mm %in% outlier, ]
outlier
df[df$flipper_length_mm %in% outlier, ]
#outlier <- boxplot.stats(df$flipper_length_mm[df$species == 'Adele'])$out
adelie <- split(df, df$species)$Adelie
#outlier <- boxplot.stats(df$flipper_length_mm[df$species == 'Adele'])$out
adelie <- split(df, df$species)$Adelie
adelie
outlier <- boxplot.stats(adelie)$out
outlier
df[df$flipper_length_mm %in% outlier, ]
#outlier <- boxplot.stats(df$flipper_length_mm[df$species == 'Adele'])$out
df <- data.frame(df)
adelie <- split(df, df$species)$Adelie
adelie
outlier <- boxplot.stats(adelie)$out
outlier
df[df$flipper_length_mm %in% outlier, ]
#outlier <- boxplot.stats(df$flipper_length_mm[df$species == 'Adele'])$out
df <- data.frame(df)
adelie <- split(df, df$species)$Adelie
adelie
outlier <- boxplot.stats(adelie)$out
outlier <- boxplot.stats(adelie$flipper_length_mm)$out
outlier
df[df$flipper_length_mm %in% outlier, ]
length(df[df$flipper_length_mm %in% outlier, ])
nrow(df[df$flipper_length_mm %in% outlier, ])
dim(df[df$flipper_length_mm %in% outlier, ])
#
library(palmerpenguins)
df <- na.omit(penguins)
df <- data.frame(df)
# 날개 길이 오름차순, 체질량 내림차순으로 정렬
ord <- order(df$flipper_length_mm, df$body_mass_g)
# 날개 길이 오름차순, 체질량 내림차순으로 정렬
ord <- order(df$flipper_length_mm, -df$body_mass_g)
ord
(df[ord, ]
headdf(df[ord, ], n =10)
head(df[ord, ], n =10)
head(df[ord, 5:6], n =10)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
get(wd)
getwd()
tinytex::install_tinytex()
library(palmerpenguins)
library(psych)
library("psych")
install.packages("psych")
library(psych)
describe(df)[, c(2:4, 8:9)]
library(palmerpenguins)
library(psych)
describe(penguins)
plot(flipper_length_mm)
plot(flipper_length_mm)
plot(bill_depth_mm)
plot(penguins$bill_depth_mm)
plot(penguins$species)
plot(penguins$bill_depth_mm, penguins$bill_length_mm)
plot(penguins$species, col = 2:4)
penguins$species
plot(penguins$bill_depth_mm, penguins$bill_length_mm, pch = 19, col = penguins$species)
penguins$species
# plot(penguins$bill_depth_mm, penguins$bill_length_mm, pch = 19, col = penguins$species)
as.numeric(penguins$species)
# plot(penguins$bill_depth_mm, penguins$bill_length_mm, pch = 19, col = penguins$species)
as.numeric(penguins$species)+1
# plot(penguins$bill_depth_mm, penguins$bill_length_mm, pch = 19, col = penguins$species)
# as.numeric(penguins$species)+1
plot(penguins$bill_depth_mm, penguins$bill_length_mm, pch = 19, col = as.numeric(penguins$species)+1)
df <- na.omit(penguins)
plot(bill_depth_mm ~ bill_length_mm, data = df,
pch = 19, col = "tomato")
df <- na.omit(species)
df <- na.omit(df$species)
plot(bill_depth_mm ~ bill_length_mm, data = df,
pch = 19, col = "tomato")
df <- na.omit(penguins)
plot(bill_depth_mm ~ bill_length_mm, data = df,
pch = 19, col = "tomato")
plot(bill_depth_mm ~ bill_length_mm, data = df,
pch = 19, col = as.numeric(penguins$species)+1)
data(package = "palmerpenguins")
data("penguins")
penguins
df <- na.omit(penguins)
df
str(df)
# ---------------------------------
library(palmerpenguins)
df <- na.omit(penguins)
df <- data.frame(df)
df
data(package = "palmerpenguins")
penguins
str(df)
str(df)
View(df)
