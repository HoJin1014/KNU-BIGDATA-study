mapping = aes(x = cut))
table(diamonds$cut)
p + geom_point()
library(ggplot2)
ggplot(data = mpg,
mapping = aes(x = displ, y = hwy)) +
geom_point()
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy,
color = "tomato"))
p + geom_point()
p1 <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p1 + geom_point(mapping = aes(color = class))
table(mpg$class)
p1 + geom_point(mapping = aes(color = class,
size = class))
p1 + geom_point(mapping = aes(color = class,
size = class),
alpha = 0.3,
shape = class) #투명도
p1 + geom_point(mapping = aes(color = class,
size = class))
p1 + geom_point(mapping = aes(color = class,
size = class),
alpha = 0.3,
shape = class) #투명도
p1 + geom_point(color = "tomato") +
facet_wrap(~class, nrow = 3)
p1 + geom_point(color = "tomato") +
facet_grid(drv ~ cy1)
p1 + geom_point(mapping = aes(color = class)) +
geom_smooth(color = "tomato")
p + ggplot(data = diamonds,
mapping = aes(x = cut))
table(diamonds$cut)
p + geom_point()
p + geom_bar()
p + ggplot(data = diamonds,
mapping = aes(x = cut))
table(diamonds$cut)
p + geom_bar()
p + geom_bar()
p + geom_bar(mapping = aes(fill = clarity))
table(diamonds$clarity)
p + geom_bar(mapping = aes(fill = clarity))
table(diamonds$clarity)
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar(mapping = aes(fill = diamonds$clarity))
p + geom_bar(mapping = aes(fill = clarity),
position = "dodge")
p + geom_bar()
p + geom_bar(mapping = aes(fill = clarity),
position = "dodge")
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar(mapping = aes(fill = clarity),
position = "dodge")
### 데이터 시각화의 이해 ###
library(tidyverse)
str(diamonds)
str(mpg)
anscombe
ans <- anscombe
mean(ans$x1)
mean(ans$x2)
mean(ans$x3)
mean(ans$x4)
mean(ans$y1)
mean(ans$y2)
mean(ans$y3)
mean(ans$y4)
cor(ans$x1, ans$y1)
cor(ans$x2, ans$y2)
cor(ans$x3, ans$y3)
cor(ans$x4, ans$y4)
lm(y1 ~ x1, data = ans)
lm(y2 ~ x2, data = ans)
lm(y3 ~ x3, data = ans)
lm(y4 ~ x4, data = ans)
par("mar")
par(mar=c(1, 1, 1, 1))
par(mfrow = c(2, 2))
plot(ans$x1, ans$y1, col = "orange", pch = 19)
abline(lm(y1 ~ x1, data = ans), col = "tomato")
plot(ans$x2, ans$y2, col = "orange", pch = 19)
abline(lm(y2 ~ x2, data = ans), col = "tomato")
plot(ans$x3, ans$y3, col = "orange", pch = 19)
abline(lm(y3 ~ x3, data = ans), col = "tomato")
plot(ans$x4, ans$y4, col = "orange", pch = 19)
abline(lm(y4 ~ x4, data = ans), col = "tomato")
par(mfrow = c(1, 1))
ggplot(data = mpg,
mapping = aes(x = displ, y = hwy)) +
geom_point()
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy,
color = "tomato"))
p + geom_point()
p1 <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p1 + geom_point(mapping = aes(color = class))
table(mpg$class)
p1 + geom_point(mapping = aes(color = class,
size = class))
p1 + geom_point(mapping = aes(color = class,
size = class),
alpha = 0.3,
shape = class) #투명도
p1 + geom_point(mapping = aes(color = class,
size = class))
p1 + geom_point(mapping = aes(color = class,
size = class),
alpha = 0.3,
shape = class) #투명도
p1 + geom_point(color = "tomato") +
facet_wrap(~class, nrow = 3)
p1 + geom_point(color = "tomato") +
facet_grid(drv ~ cy1)
p1 + geom_point(mapping = aes(color = class)) +
geom_smooth(color = "tomato")
p + ggplot(data = diamonds,
mapping = aes(x = cut))
table(diamonds$cut)
p + geom_bar()
table(diamonds$clarity)
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar(mapping = aes(fill = clarity),
position = "dodge")
rlang::last_error()
p + geom_bar()
table(diamonds$clarity)
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar(mapping = aes(fill = clarity),
position = "dodge")
diamonds
table(diamonds$clarity)
g
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar(mapping = aes(fill = clarity))
diamonds$clarity
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar(mapping = aes(fill = clarity))
diamonds$clarity
p + geom_bar(mapping = aes(fill = clarity))
p
p + geom_bar(mapping = aes(fill = clarity))
p <- ggplot(data = diamonds,
mapping = aes(x = displ, y = hwy,
color = "tomato"))
p
p + geom_bar(mapping = aes(fill = clarity))
p <- ggplot(data = diamonds,
mapping = aes(x = cut))
p
p
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar()
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar(mapping = aes(fill = clarity),
position = "dodge")
### 데이터 시각화의 이해 ###
library(tidyverse)
str(diamonds)
str(mpg)
anscombe
ans <- anscombe
mean(ans$x1)
mean(ans$x2)
mean(ans$x3)
mean(ans$x4)
mean(ans$y1)
mean(ans$y2)
mean(ans$y3)
mean(ans$y4)
cor(ans$x1, ans$y1)
cor(ans$x2, ans$y2)
cor(ans$x3, ans$y3)
cor(ans$x4, ans$y4)
lm(y1 ~ x1, data = ans)
lm(y2 ~ x2, data = ans)
lm(y3 ~ x3, data = ans)
lm(y4 ~ x4, data = ans)
par(mfrow = c(2, 2))
plot(ans$x1, ans$y1, col = "orange", pch = 19)
abline(lm(y1 ~ x1, data = ans), col = "tomato")
plot(ans$x2, ans$y2, col = "orange", pch = 19)
abline(lm(y2 ~ x2, data = ans), col = "tomato")
plot(ans$x3, ans$y3, col = "orange", pch = 19)
abline(lm(y3 ~ x3, data = ans), col = "tomato")
plot(ans$x4, ans$y4, col = "orange", pch = 19)
abline(lm(y4 ~ x4, data = ans), col = "tomato")
par(mfrow = c(1, 1))
ggplot(data = mpg,
mapping = aes(x = displ, y = hwy)) +
geom_point()
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy,
color = "tomato"))
p + geom_point()
p1 <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p1 + geom_point(mapping = aes(color = class))
table(mpg$class)
p1 + geom_point(mapping = aes(color = class,
size = class))
p1 + geom_point(mapping = aes(color = class,
size = class),
alpha = 0.3,
shape = class) #투명도
p1 + geom_point(mapping = aes(color = class,
size = class))
p1 + geom_point(mapping = aes(color = class,
size = class,
alpha = 0.3,
shape = class)) #투명도
p1 + geom_point(color = "tomato") +
facet_wrap(~class, nrow = 3)
p1 + geom_point(color = "tomato") +
facet_grid(drv ~ cy1)
p1 + geom_point(color = "tomato") +
facet_grid(drv ~ cyl)
p1 + geom_point(mapping = aes(color = class)) +
geom_smooth(color = "tomato")
p <- ggplot(data = diamonds,
mapping = aes(x = cut))
table(diamonds$cut)
p + geom_bar()
diamonds
diamonds$clarity
table(diamonds$clarity)
p + geom_bar(mapping = aes(fill = clarity))
p + geom_bar(mapping = aes(fill = clarity),
position = "dodge")
library(datasauRus)
install.packages("datasauRus")
#install.packages("datasauRus")
library(datasauRus)
data(package = "datasauRus")
data("datasauRus")
data("datasaurus")
dd <- datasaurus_dozen
str(dd)
levels(dd$dataset)
unique(dd$dataset)
plot(y ~ x, data = dd, pch = 19, col = "tomato")
plot(y ~ x, data = subset(dd, data == "dino"),
pch = 19, col = "tomato")
plot(y ~ x,
data = subset(dd, dataset == "dino"),
pch = 19, col = "tomato")
ggplot(data = datasaurus_dozen,
mapping = aes(x = x, y = y)) +
geom_point()
ggplot(data = subset(dd, dataset == "dino"),
mapping = aes(x = x, y = y)) +
geom_point()
ggplot(data = subset(dd, dataset == "dino"),
mapping = aes(x = x, y = y)) +
geom_point(color = "#88FFFF00")
ggplot(data = subset(dd, dataset == "dino"),
mapping = aes(x = x, y = y)) +
geom_point(color = "#FFFF00")
ggplot(data = subset(dd, dataset == "dino"),
mapping = aes(x = x, y = y)) +
geom_point(color = "#00FFFF")
facet_wrap(~ dataset, nrow = 3)
ggplot(data = subset(dd, dataset == "dino"),
mapping = aes(x = x, y = y)) +
geom_point(color = "#00FFFF") +
facet_wrap(~ dataset, nrow = 3)
ggplot(data = subset(dd, dataset == "dino"),
mapping = aes(x = x, y = y)) +
geom_point(color = "tomato") +
facet_wrap(~ dataset, nrow = 3)
ggplot(data = dd,
mapping = aes(x = x, y = y)) +
geom_point(color = "tomato") +
facet_wrap(~ dataset, nrow = 3)
ggplot(data = dd,
mapping = aes(x = x, y = y)) +
geom_point(color = "tomato", mapping = aes(color = dataset)) +
facet_wrap(~ dataset, nrow = 3)
ggplot(data = dd,
mapping = aes(x = x, y = y)) +
geom_point(mapping = aes(color = dataset)) +
facet_wrap(~ dataset, nrow = 3)
p <- ggplot(mpg, aes(x = displ, y = hwy))
p + geom_boxplot(fill = "tomato")
p <- ggplot(mpg, aes(x = class, y = hwy))
p + geom_boxplot(fill = "tomato")
p + geom_boxplot(fill = "tomato") +
coord_flip()
p <- ggplot(diamonds, aes(x = cut, fill = cut))
p + geom_bar()
p + geom_bar(show.legend = F, whidth = 1)
p + geom_bar(show.legend = F, whidth = 0.1)
p <- ggplot(diamonds, aes(x = cut, fill = cut))
p + geom_bar(show.legend = F, whidth = 0.1)
p <- ggplot(diamonds, aes(x = cut, fill = cut))
p + geom_bar(show.legend = F, width = 0.1)
p + geom_bar(show.legend = F, width = 0.1) +
coord_flip()
p + geom_bar(show.legend = F, width = 0.1) +
coord_polar()
p + geom_bar(show.legend = F, width = 1) +
coord_polar()
world <- map_data("world")
library(maps)
world <- map_data("world")
geom_polygon(fill = "skyblue", color = "blue")
ggplot(world, aes(long, lat, group = group)) +
geom_polygon(fill = "skyblue", color = "blue")
mpg
str(mpg)
mpg[mpg$hwy > mean(mpg$hwy), c(1, 2, 10:11)]
mpg[mpg$hwy > mean(mpg$hwy), c(1, 2, 9, 11)]
sd(mpg[mpg$hwy > mean(mpg$hwy), c(1, 2, 9, 11)]$hwy)
v <- c(10, 30, 50, 20, 40)
sort(v)
mpg %>%
group_by(class)
mpg %>%
group_by(class) %>%
group_by()
mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p ＋ geom_point(mapping = aes(color = class)) +
p ＋geom_point(mapping = aes(color = class)) +
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p ＋ geom_point(mapping = aes(color = class)) +
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p ＋ geom_point(mapping = aes(color = class)) +
mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p ＋ geom_point(mapping = aes(color = class)) +
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p ＋ geom_point(mapping = aes(color = class)) +
p ＋ geom_point(mapping = aes(color = class)) +
p ＋ geom_point(mapping = aes(color = class)) +
p + geom_point(mapping = aes(color = class)) +
geom_label(mapping = aes(label = model),
data = best.in.class,
nudge_y = 2, alpha = 0.5)
mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p + geom_point(mapping = aes(color = class)) +
geom_label(mapping = aes(label = model),
data = best.in.class,
nudge_y = 2, alpha = 0.5)
p + geom_point(mapping = aes(color = class)) +
geom_label(mapping = aes(label = model),
data = best_in_class,
nudge_y = 2, alpha = 0.5)
best.in.class <- mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
p <- ggplot(data = mpg,
mapping = aes(x = displ, y = hwy))
p + geom_point(mapping = aes(color = class)) +
geom_label(mapping = aes(label = model),
data = best.in.class,
nudge_y = 2, alpha = 0.5)
p + geom_point(mapping = aes(color = class)) +
geom_label(mapping = aes(label = model),
data = best.in.class,
nudge_y = 2, alpha = 0.5) +
theme(legend.position = "bottom")
p + geom_point(mapping = aes(color = class)) +
geom_label(mapping = aes(label = model),
data = best.in.class,
nudge_y = 2, alpha = 0.5) +
theme(legend.position = "bottom") +
theme_minimal() # 위치
ggsave("myfig.png")
getwd()
library(palmerpenguins)
pg <- penguins
pg <- pg[complete.cases(pg), ]
str(penguins)
pg <- penguins
pg <- pg[complete.cases(pg), ]
pg %>%
ggplot(aes(x = sex, fill = bill_length_mm)) +
geom_histogram(color = "e9ecef", alpha = 0.6, position = 'identitiy') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
library(palmerpenguins)
pg <- penguins
pg <- pg[complete.cases(pg), ]
pg %>%
ggplot(aes(x = body_mass_g, fill = sex)) +
geom_histogram(color = "e9ecef", alpha = 0.6, position = 'identitiy') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
pg %>%
ggplot(aes(x = body_mass_g, fill = sex)) +
geom_histogram(color = "e9ecef", alpha = 0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
# library
library(ggplot2)
library(dplyr)
library(hrbrthemes)
# Build dataset with different distributions
data <- data.frame(
type = c( rep("variable 1", 1000), rep("variable 2", 1000) ),
value = c( rnorm(1000), rnorm(1000, mean=4) )
)
# library
install.packages("hrbrthemes")
# library
# install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(hrbrthemes)
# Build dataset with different distributions
data <- data.frame(
type = c( rep("variable 1", 1000), rep("variable 2", 1000) ),
value = c( rnorm(1000), rnorm(1000, mean=4) )
)
# Represent it
p <- data %>%
ggplot( aes(x=value, fill=type)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
library(palmerpenguins)
str(penguins)
pg <- penguins
pg <- pg[complete.cases(pg), ]
pg %>%
ggplot(aes(x = body_mass_g, fill = sex)) +
geom_histogram(color = "e9ecef", alpha = 0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
pg %>%
ggplot(aes(x = body_mass_g, fill = sex)) +
geom_histogram(color = "#e9ecef", alpha = 0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
library(gapminder)
install.packages("gapminder")
# install.packages("gapminder")
library(gapminder)
library(esquisse)
install.packages("esquisse")
esquisse:::esquisser()
esquisse:::esquisser()
ggplot(gapminder::gapminder) +
aes(x = gdpPercap,
y = lifeExp,
fill = year,
colour = continent,
size = pop
) +
geom_point(shape = "circle") +
scale_fill_gradient() +
scale_color_hue(direction = 1) +
theme_minimal()
esquisse:::esquisser()
gapminder::gapminder %>%
filter(year >= 2007L & year <= 2007L) %>%
ggplot() +
aes(x = gdpPercap, y = lifeExp, fill = year, colour = continent, size = pop) +
geom_point(shape = "bullet") +
scale_fill_gradient() +
scale_color_hue(direction = 1) +
labs(x = "수입",
y = "기대수명", title = "Gapminder 따라하기", subtitle = "나 쫌 짱인듯", caption = "Fig. 1. 한스 로슬링 따라하기") +
theme_minimal()
ggplot(gapminder::gapminder) +
aes(x = gdpPercap,
y = lifeExp,
fill = year,
colour = continent,
size = pop
) +
geom_point(shape = "circle") +
scale_fill_gradient() +
scale_color_hue(direction = 1) +
theme_minimal()
gapminder::gapminder %>%
filter(year >= 2007L & year <= 2007L) %>%
ggplot() +
aes(x = gdpPercap, y = lifeExp, fill = year, colour = continent, size = pop) +
geom_point(shape = "bullet") +
scale_fill_gradient() +
scale_color_hue(direction = 1) +
labs(x = "수입",
y = "기대수명", title = "Gapminder 따라하기", subtitle = "나 쫌 짱인듯", caption = "Fig. 1. 한스 로슬링 따라하기") +
theme_minimal()
### Mastering shiny ###
library(shiny)
